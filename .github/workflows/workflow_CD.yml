name: "CD"

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

concurrency:
  group: "CD-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  CD:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

#region Set up
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: falti/dotenv-action@v1.0.4
      with:
        keys-case: bypass
        export-variables: true

    - run: echo "VERSION_STRING=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
        echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV
#endregion

#region Lint all XML files
    - uses: tecolicom/actions-use-apt-tools@v1
      with:
        tools: libxml2-utils

    - uses: tj-actions/glob@v17
      id: glob
      with:
        files: |
          **/*.xml
        excluded-files: |
          Source/**/*

    - if: steps.glob.outputs.paths != ''
      run: xmllint --noout ${{ steps.glob.outputs.paths }}
#endregion

#region Build the assembly
    - if: env.SLN_PATH != ''
      run: dotnet restore ${{ env.SLN_PATH }}

    - if: env.SLN_PATH != ''
      run: dotnet build ${{ env.SLN_PATH }} --configuration Release --no-restore
#endregion

#region Create release branch
    - uses: fregante/setup-git-user@v2

    - run: git checkout -b "release/${{ env.VERSION_STRING }}"
#endregion

#region Increment mod version
    - uses: Mudlet/xmlstarlet-action@v1.1
      with:
        args: ed -P -O -L --update "/ModMetaData/modVersion" -v "${{ env.VERSION_STRING }}" "About/About.xml"

    - run: git add "About/About.xml"

    - run: git commit -m "Increment modVersion to ${{ env.VERSION_STRING }}"
#endregion

#region Generate CHANGELOG
    - id: update-changelog
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        configuration: ".github/workflows/changelog.json"
        fromTag: ${{ env.PREVIOUS_TAG }}
        toTag: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#endregion

#region Update CHANGELOG.md
    - uses: DamianReeves/write-file-action@v1.2
      with:
        path: CHANGELOG.md.temp
        write-mode: overwrite
        contents: "## Release ${{ env.VERSION_STRING }}\n\n${{ steps.update-changelog.outputs.changelog }}"

    - run: echo -e "$(cat CHANGELOG.md.temp)\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
    - run: awk -v RS= -v ORS='\n\n' '1' CHANGELOG.md > CHANGELOG.md.temp
    - run: mv CHANGELOG.md.temp CHANGELOG.md

    - run: git add CHANGELOG.md

    - run: git commit -m "Update CHANGELOG.md for version ${{ env.VERSION_STRING }}"
#endregion

#region Push release branch to origin
    - run: git push --set-upstream origin "release/${{ env.VERSION_STRING }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#endregion

#region Create and merge pull request
    - id: create-pull-request
      run: gh pr create --title "Release ${{ env.VERSION_STRING }}" --body "${{ steps.update-changelog.outputs.changelog }}" --base "${{ github.event.base_ref }}" --head "release/${{ env.VERSION_STRING }}" --label "release"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: gh pr merge --merge --delete-branch
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#endregion

#region Move tag to the merge commit
    - run: git tag -d ${{ github.ref_name }}
    - run: git push origin :refs/tags/${{ github.ref_name }}
    - run: git tag ${{ github.ref_name }}
    - run: git push origin ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#endregion

#region Create release asset
    - run: zip -r "${{ env.MOD_NAME }}-${{ env.VERSION_STRING }}.zip" ${{ env.ZIP_CONTENTS }}
#endregion

#region Create release
    - run: gh release create ${{ github.ref_name }} "${{ env.MOD_NAME }}-${{ env.VERSION_STRING }}.zip" --title "${{ env.VERSION_STRING }}" --notes "${{ steps.update-changelog.outputs.changelog }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#endregion
